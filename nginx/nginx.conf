  user nginx;

  # 配置nginx worker进程个数
  worker_processes auto;

  # 配置日志存放路径
  #access_log  logs/access.log  warn;
  #error_log   logs/error.log  main;
  #pid logs/nginx.pid;
  
  worker_rlimit_nofile 65535;


  events {
        #单个worker进程最大的并发连接数
        worker_connections  65535;
        #使用epoll模型
        use epoll;
        #互斥锁 默认是 on 当所有worker处于睡眠态 来了一个请求就只唤醒一个worker 
        #如果off 即便来了一个请求 也要唤醒所有worker(惊群) 会导致负载上升 但最求吞吐量的话建议off
        accept_mutex on;
  }

  http {
    # 设置日志格式
    log_format  main  '$clientRealIp $http_x_forwarded_for - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" $http_host';
    map $http_x_forwarded_for  $clientRealIp {
            ""      $remote_addr;
                    ~^(?P<firstAddr>[0-9\.]+),?.*$  $firstAddr;
    }
    #打开或关闭错误页面中的nginx版本号
    server_tokens off;
    # 开启高效文件传输模式
    include mime.types;                         # 媒体类型
    default_type    application/octet-stream;   # 默认媒体类型
    #优化磁盘IO设置，指定nginx是否调用sendfile函数来输出文件，普通应用设为on，下载等磁盘IO高的应用，可设为off
    sendfile on;
    #设置nginx在一个数据包里发送所有头文件，而不是一个接一个的发送
    tcp_nopush on;
    #长连接的超时时长，默认为75s
    keepalive_timeout 30;
    #在一个长连接所能够允许请求的最大资源数 不常用
    keepalive_requests 20;
    # 设置相应客户端的超时时间，超时nginx将会关闭连接
    send_timeout 15;            
    #设置默认字符集
    charset UTF-8;
    # 上传文件大小设置（动态引用）
    client_max_body_size 2m;
    # 数据包头部缓存大小
    client_header_buffer_size    1k;        #默认请求包头信息的缓存
    large_client_header_buffers  4 4k;      #大请求包头部信息的缓存个数与容量


    #设置nginx采用gzip压缩的形式发送数据，减少发送数据量，但会增加请求处理时间及CPU处理时间，需要权衡
    gzip on;
    #加vary给代理服务器使用，针对有的浏览器支持压缩，有个不支持，根据客户端的HTTP头来判断是否需要压缩
    gzip_vary on;
    #nginx在压缩资源之前，先查找是否有预先gzip处理过的资源 不常用
    gzip_static on;
    #设置对数据启用压缩的最少字节数，如果请求小于10240字节则不压缩，会影响请求速度
    gzip_min_length 1K;
    #设置数据压缩等级，1-9之间，9最慢压缩比最大
    gzip_comp_level 6;
    #设置需要压缩的数据格式
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/x-httpd-php image/jpeg image/gif image/png application/javascript;
    #对特定文件压缩，类型参考mime.types
    gzip_disable "MSIE[1-6]\.";
    gzip_buffers 4 16k;                #压缩缓冲区大小，申请4个单位为16K的内存作为压缩结果流缓存

    #开发缓存的同时也指定了缓存文件的最大数量，20s如果文件没有请求则删除缓存
    open_file_cache max=100000 inactive=20s;
    #指多长时间检查一次缓存的有效信息
    open_file_cache_valid 60s;
    #文件缓存最小的访问次数，只有访问超过5次的才会被缓存
    open_file_cache_min_uses 5;
    #允许客户端请求的最大单文件字节数

    proxy_connect_timeout 300s;
    proxy_send_timeout 900s;
    proxy_read_timeout 900s;
    proxy_next_upstream off;
    proxy_buffer_size 32k;
    proxy_buffers 4 64k;
    proxy_busy_buffers_size 128k;
    proxy_redirect off;
    proxy_hide_header Vary;
    proxy_set_header Accept-Encoding '';
    proxy_set_header Referer $http_referer;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    #引用/etc/nginx/vhosts下的所有配置文件，如果主机名众多的情况下可以每个主机名建立一个文件，以方便管理
    include /etc/nginx/vhosts/*;
}
